package Window;

import Main.ActionType;
import Main.ClientHandler;
import Main.Result;
import Main.ResultType;

import javax.swing.*;
import java.util.Observable;
import java.util.Observer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author khoi
 */
public class RoomChat extends javax.swing.JFrame implements Observer {

    ClientHandler mClientHandler;
    String mRoomCode;
    String mRoomName;
    ListRoom mListRoom;
    int mNumClient;
    /**
     * Creates new form RoomChat
     */
     public RoomChat(ListRoom listRoom, ClientHandler clientHandler, String roomCode, String roomName, int numClient) {
        initComponents();
        SetOutLook();
        mListRoom = listRoom;
        mClientHandler = clientHandler;
        mRoomCode = roomCode;
        mRoomName = roomName;
        mNumClient = numClient;
        mClientHandler.addObserver(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtScreen = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMessage = new javax.swing.JTextArea();
        btnSend = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblOnline = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        txtScreen.setEditable(false);
        txtScreen.setColumns(20);
        txtScreen.setLineWrap(true);
        txtScreen.setRows(5);
        txtScreen.setFocusable(false);
        jScrollPane1.setViewportView(txtScreen);

        txtMessage.setColumns(20);
        txtMessage.setLineWrap(true);
        txtMessage.setRows(5);
        jScrollPane2.setViewportView(txtMessage);

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        tblOnline.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Online Client"
            }
        ));
        tblOnline.setFocusable(false);
        jScrollPane4.setViewportView(tblOnline);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        if(txtMessage.getText().trim().length() == 0) return;
        mClientHandler.SendMess(txtMessage.getText().trim());
        txtMessage.setText("");
    }//GEN-LAST:event_btnSendActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setTitle("Name: " + mClientHandler.mClientName + ". Room Name: " + mRoomName + ". Room Code: "
                        + mRoomCode + ". Number of Clients: " + mNumClient);
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        mClientHandler.LeaveRoom();
        mClientHandler.addObserver(mListRoom);
        mClientHandler.deleteObserver(this);
        mListRoom.setVisible(true);
    }//GEN-LAST:event_formWindowClosing
    
    @Override
    public void update(Observable o, Object arg) {
        Result result = (Result) arg;
        if (result.mResultCode.equals(ResultType.ERROR)) {
            JOptionPane.showMessageDialog(null, result.mContent, "Failed", JOptionPane.ERROR_MESSAGE);
            return;
        }
        switch (result.mActionType) {
            case ActionType.SEND_MESSAGE: {
                String[] sort = result.mContent.split(";", -1);
                String sender = sort[0];
                String msg = sort[1];
                msg = msg.replaceAll("<br>", "\n");
                if (sender.equals(mClientHandler.mClientName))
                    txtScreen.append("You: " + msg + "\n");
                else
                    txtScreen.append(sender + ": " + msg + "\n");
                break;
            }
            
            case ActionType.UPDATE_NUMBER_CLIENT: {
                String numClient = result.mContent;
                mNumClient = Integer.parseInt(numClient);
                this.setTitle("Nickname: " + mClientHandler.mClientName + ". Room Name: " + mRoomName + ". Room Code: "
                        + mRoomCode + ". Number of Clients: " + mNumClient);
                break;
            }
            case ActionType.NOTIFY_JUST_JOIN_ROOM: {
                String clientJoin = result.mContent;
                txtScreen.append("<" + clientJoin + "> has just joined the room\n");
                break;
            }
            case ActionType.NOTIFY_JUST_LEAVE_ROOM: {
                String clientLeave = result.mContent;
                txtScreen.append("<" + clientLeave + "> has just left the room\n");
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
  
    
    private void SetOutLook() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomChat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblOnline;
    private javax.swing.JTextArea txtMessage;
    private javax.swing.JTextArea txtScreen;
    // End of variables declaration//GEN-END:variables
}





































